- name: "Demonstrate connecting to switches"
  hosts: layer3
  gather_facts: no

  tasks:
    ###
    # Collect data
    #
    - name: Gather facts (ios)
      arista.eos.eos_facts:
      when: ansible_network_os == 'cisco.ios.ios'

    - name: Gather facts (nxos)
      cisco.ios.ios_facts:
      when: ansible_network_os == 'cisco.nxos.nxos'

    ###
    # Demonstrate variables
    #
    - name: Display some facts
      debug:
        msg: "The hostname is {{ ansible_net_hostname }} and the OS is {{ ansible_net_version }}"

    - name: Facts from a specific host
      debug:
        var: hostvars['10.40.4.1']

    - name: Write facts to disk using a template
      copy:
        content: |
          #jinja2: lstrip_blocks: True
          IOS device info:
            {% for host in groups['ios'] %}
            Hostname: {{ hostvars[host].ansible_net_hostname }}
            Version: {{ hostvars[host].ansible_net_version }}
            Model: {{ hostvars[host].ansible_net_model }}
            Serial: {{ hostvars[host].ansible_net_serialnum }}
            {% endfor %}

          IOS device info:
            {% for host in groups['nxos'] %}
            Hostname: {{ hostvars[host].ansible_net_hostname }}
            Version: {{ hostvars[host].ansible_net_version }}
            Model: {{ hostvars[host].ansible_net_model }}
            Serial: {{ hostvars[host].ansible_net_serialnum }}
            {% endfor %}

        dest: /tmp/switch-facts
      run_once: yes

    ###
    # Get running configuration
    #

    - name: Backup switch (ios)
      cisco.ios.ios_config:
        backup: yes
      register: backup_ios_location
      when: ansible_network_os == 'cisco.ios.ios'

    - name: backup switch (nxos)
      cisco.nxos.nxos_config:
        backup: yes
      register: backup_nxos_location
      when: ansible_network_os == 'cisco.nxos.nxos'

    - name: Create backup dir
      file:
        path: "/tmp/backups/{{ inventory_hostname }}"
        state: directory
        recurse: yes

    - name: Copy backup files into /tmp/backups/ (ios)
      copy:
        src: "{{ backup_ios_location.backup_path }}"
        dest: "/tmp/backups/{{ inventory_hostname }}/{{ inventory_hostname }}.bck"
      when: ansible_network_os == 'cisco.ios.ios'

    - name: Copy backup files into /tmp/backups/ (nxos)
      copy:
        src: "{{ backup_nxos_location.backup_path }}"
        dest: "/tmp/backups/{{ inventory_hostname }}/{{ inventory_hostname }}.bck"
      when: ansible_network_os == 'cisco.nxos.nxos'
